#!/usr/bin/env python
# Copyright (C) 2016-2017 Catherine Beauchemin <cbeau@users.sourceforge.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#
# =============================================================================
#
#                                   Preamble
#
# =============================================================================
#

import linmod
import numpy
import phymcmc.mcmc

#
# =============================================================================
#
#                                   Main
#
# =============================================================================
#

dat = numpy.loadtxt('lin.dat')

# Centre location from which to launch walkers
# 	should normally be the output of a best-fit to start in good place
pdic = dict(slope=1.0,yint=1.0)
pfit = ['slope','yint']
params = phymcmc.ParamStruct(pdic.copy(),pfit)
model = linmod.line(dat, params)

# MCMC parameters
mcpars = dict(
	chain_file = 'chain_lin_arr.hdf5',
	model = model,
	nwalkers = 300,
	nsteps = 400,
	# Parameters over which walkers will be linearly distributed initially
	# Note that all parameters will be walked in LINEAR space
	linpars = ['lnprob', 'slope', 'yint'],
	threads = 4
)
# Setting up the MCMC sampler
mcsampler = phymcmc.mcmc.MCSampler( **mcpars )
# Example on how to initialize walker positions from an array
#   (it is up to you how you build the array)
import numpy.random
initslope = numpy.random.randn(mcpars['nwalkers'])*2.5+15.0
inityint = numpy.random.randn(mcpars['nwalkers'])*2.0+9.0
initpos = numpy.vstack((initslope,inityint)).T
mcsampler.init_walkers_from_array(initpos)
# Performing the MCMC run
mcsampler.run_mcmc()
